openapi: 3.0.1
info:
  title: PickMe-Records
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- BearerAuth: []
tags:
- name: Record
  description: 면접 기록 관리 API
paths:
  /api/record/update/{postId}:
    put:
      tags:
      - Record
      summary: 기록 업데이트
      description: 특정 면접 기록을 업데이트합니다.
      operationId: updateRecord
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: postId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordUpdateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordResponseDto"
  /api/record/create:
    post:
      tags:
      - Record
      summary: 기록 생성
      description: 새로운 면접 기록을 생성합니다.
      operationId: createRecord
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordCreateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordResponseDto"
  /api/record/read:
    get:
      tags:
      - Record
      summary: 모든 기록 조회
      description: 모든 면접 기록을 조회합니다.
      operationId: getAllRecords
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecordResponseDto"
  /api/record/read/{postId}:
    get:
      tags:
      - Record
      summary: 특정 기록 조회
      description: 특정 면접 기록을 조회합니다.
      operationId: getRecord
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: postId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordResponseDto"
  /api/record/delete/{postId}:
    delete:
      tags:
      - Record
      summary: 기록 삭제
      description: 특정 면접 기록을 삭제합니다.
      operationId: deleteRecord
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: postId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: OK
components:
  schemas:
    ObjectId:
      type: object
      properties:
        timestamp:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    RecordUpdateDto:
      required:
      - category
      - content
      type: object
      properties:
        category:
          type: string
          description: Category
          example: 1st interview
        content:
          type: string
          description: Content
          example: (1분 자기소개) 안녕하십니까. 저는...
      description: DTO for updating an existing interview record
    RecordResponseDto:
      type: object
      properties:
        postId:
          $ref: "#/components/schemas/ObjectId"
        userId:
          type: string
          description: User ID
          example: user123
        category:
          type: string
          description: Category
          example: 1st interview
        content:
          type: string
          description: Content
          example: (1분 자기소개) 안녕하십니까. 저는...
        createdAt:
          type: string
          description: Creation Time
          format: date-time
          example: 2024-01-01T12:34:56Z
      description: DTO for interview record responses
    RecordCreateDto:
      required:
      - category
      - content
      - userId
      type: object
      properties:
        userId:
          type: string
          description: User ID
          example: user123
        category:
          type: string
          description: Category
          example: 1st interview
        content:
          type: string
          description: Content
          example: (1분 자기소개) 안녕하십니까. 저는...
      description: DTO for creating a new interview record
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
